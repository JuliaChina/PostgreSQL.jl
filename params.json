{"name":"PostgreSQL.jl","tagline":"PostgreSQL DBI driver","body":"# PostgreSQL.jl\r\n\r\n[![Build Status](https://travis-ci.org/JuliaDB/PostgreSQL.jl.svg)](https://travis-ci.org/JuliaDB/PostgreSQL.jl)  [![Coverage Status](https://img.shields.io/coveralls/JuliaDB/PostgreSQL.jl.svg)](https://coveralls.io/r/JuliaDB/PostgreSQL.jl)  [![codecov.io](http://codecov.io/github/JuliaDB/PostgreSQL.jl/coverage.svg)](http://codecov.io/github/JuliaDB/PostgreSQL.jl)\r\n\r\nAn interface to PostgreSQL from Julia. Uses libpq (the C PostgreSQL API) and obeys the [DBI.jl protocol](https://github.com/JuliaDB/DBI.jl).\r\n\r\n\r\n## Usage\r\n\r\n```julia\r\nusing DBI\r\nusing PostgreSQL\r\n\r\nconn = connect(Postgres, \"localhost\", \"username\", \"password\", \"dbname\", 5432)\r\n\r\nstmt = prepare(conn, \"SELECT 1::bigint, 2.0::double precision, 'foo'::character varying, \" *\r\n\t\t\t\t\t \"'foo'::character(10);\")\r\nresult = execute(stmt)\r\nfor row in result\r\n\t# code\r\nend\r\n\r\nfinish(stmt)\r\n\r\ndisconnect(conn)\r\n```\r\n\r\n### Block Syntax\r\n\r\n```julia\r\nusing DBI\r\nusing PostgreSQL\r\n\r\nconnect(Postgres, \"localhost\", \"username\", \"password\", \"dbname\", 5432) do conn\r\n\t#code\r\nend\r\n```\r\n\r\n\r\n## Requirements\r\n\r\n* [DBI.jl](https://github.com/JuliaDB/DBI.jl)\r\n* [DataFrames.jl](https://github.com/JuliaStats/DataFrames.jl) >= v0.5.7\r\n* [DataArrays.jl](https://github.com/JuliaStats/DataArrays.jl) >= v0.1.2\r\n* libpq shared library (comes with a standard PostgreSQL client installation)\r\n* julia 0.3\r\n\r\nTests require a local PostgreSQL server with a postgres user/database (installed by default with PostgreSQL server installations) with trusted authentication from localhost.\r\n\r\n\r\n## Systems\r\n\r\n* Tested on Funtoo Linux and Windows 8\r\n* Should work on other systems provided libpq is avaiable (please file an issue if this is not the case)\r\n\r\n\r\n## TODO (soon)\r\n\r\n* Implement more default PostgreSQL type handling\r\n* Test type handling overrides\r\n* More comprehensive error handling and tests\r\n* Support for COPY\r\n\r\n\r\n## TODO (not soon)\r\n\r\n* Asynchronous connection support\r\n* Asynchronous Julia for handling asynchronous connections\r\n* Testing and compatibility with multiple versions of PostgreSQL and libpq\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}